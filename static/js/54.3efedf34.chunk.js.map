{"version":3,"file":"static/js/54.3efedf34.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectIsFetching = state => state.auth.isFetching;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  align-items: center;\n`;\nexport const ContactLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: 700;\n`;\nexport const ContactInput = styled.input`\n  width: 400px;\n  height: 35px;\n  border-radius: 4px;\n  border: none;\n  font-size: 20px;\n  font-weight: 600;\n  color: rgb(114, 114, 114);\n  padding: 5px 10px;\n  outline: transparent;\n`;\nexport const AddContactBtn = styled.button`\n  border-radius: 4px;\n  padding: 10px 30px;\n  border: none;\n  cursor: pointer;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(17, 189, 55);\n    color: #fff;\n    transform: scale(1.1);\n    transition: all 250ms;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\nimport {\n  Form,\n  ContactLabel,\n  ContactInput,\n  AddContactBtn,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n      })\n    );\n    setcontactName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ContactLabel>\n        Name\n        <ContactInput\n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactLabel>\n\n      <ContactLabel>\n        Number\n        <ContactInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactLabel>\n\n      <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListItem = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 20px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 30px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactText = styled.p`\n  font-weight: 700;\n  font-size: 18px;\n`;\n\nexport const ContactBtn = styled.button`\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px 20px;\n  border: none;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(255, 2, 2);\n    color: #fff;\n    transform: scale(1.1);\n    transition: all 250ms;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectStatusFilter } from 'redux/selectors';\nimport {\n  ContactListItem,\n  ContactItem,\n  ContactText,\n  ContactBtn,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactListItem>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem>\n          <ContactText>\n            {name}: {number}\n          </ContactText>\n          <ContactBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </ContactBtn>\n        </ContactItem>\n      ))}\n    </ContactListItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 20px;\n  font-size: 19px;\n  font-weight: 600;\n  text-align: center;\n  text-shadow: 1px 1px 10px rgb(77, 77, 77);\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 30px;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  font-size: 20px;\n  font-weight: 600;\n  outline: transparent;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport {selectStatusFilter} from '../../redux/selectors';\nimport { Label, Input } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Please write name\"\n      />\n    </Label>\n  );\n}\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'start',\n      }}\n    >\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && (\n        <b\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: '10px',\n          }}\n        >\n          Loading...\n        </b>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","Form","styled","_templateObject","_taggedTemplateLiteral","ContactLabel","_templateObject2","ContactInput","_templateObject3","AddContactBtn","_templateObject4","ContactForm","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","contactName","setcontactName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","name","_jsxs","onSubmit","preventDefault","some","_ref","window","alert","concat","addContact","children","_jsx","type","onChange","pattern","title","required","ContactListItem","ContactItem","ContactText","ContactBtn","ContactList","normalizedFilter","toLowerCase","filteredContacts","includes","useEffect","fetchContacts","map","_ref2","id","onClick","deleteContact","Label","Input","Filter","setFilter","placeholder","Contacts","style","display","flexDirection","alignItems","marginLeft","marginRight","marginTop"],"sourceRoot":""}